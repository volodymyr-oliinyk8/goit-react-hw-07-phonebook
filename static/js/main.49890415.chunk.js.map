{"version":3,"sources":["components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-operations.js","redux/Phonebook/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","actions","_","payload","state","action","filter","id","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReduser","devTools","process","persistor","persistStore","Container","children","className","styles","container","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","contact","post","delete","getContactFilter","getAllContacts","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","connect","selectors","onSubmit","operations","useState","setName","setNumber","contactNameId","v4","handleChange","e","currentTarget","value","reset","form","preventDefault","options","find","alert","htmlFor","type","pattern","title","required","onChange","onDelete","useDispatch","useEffect","map","item","onClick","Actions","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.49890415.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2EYro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3XjMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__nvejs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2fWWL\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// const deleteContact = createAction('contact/Delete');\nconst changeFilter = createAction('contact/ChangeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n};\n\n// варіант без toolkit\n// const addContact = ({ name, number }) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: v4(),\n//     name,\n//     number,\n//   },\n// });\n// const changeFilter = value => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n\n//v2\n// const addContact = createAction('contact/Add', ({ name, number }) => {\n//   return {\n//     payload: {\n//       id: v4(),\n//       name,\n//       number,\n//     },\n//   };\n// });\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// варіант без toolkit\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return [...state.filter(({ id }) => id !== payload)];\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case 'contact/ChangeFilter':\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n// файл phonebook-type.js видаляємо\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './Phonebook/phonebook-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => {\n      //   console.log(data);\n      dispatch(fetchContactsSuccess(data));\n    })\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n\n    axios\n      .post('/contacts', contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nconst deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\nconst getContactFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getContactFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getContactFilter, getVisibleContacts, getAllContacts };\n\n// варіант без мемоізації\n// const getVisibleContacts = state => {\n//   const filter = getAllContacts(state);\n//   const allContacts = getAllContacts(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { operations, selectors } from '../../redux/Phonebook';\n\nimport { v4 } from 'uuid';\n\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit, contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactNameId = v4();\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const options = { name, number };\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    } else if (contacts.find(contact => number === contact.number)) {\n      alert(`${number} is already exists`);\n    } else {\n      onSubmit(options);\n    }\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor={contactNameId}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(operations.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { useDispatch, connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { operations, selectors } from '../../redux/Phonebook';\n\nconst ContactsList = ({ contacts, onDelete }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} name={name} key={id}>\n          {name}: {number}\n          <button type=\"button\" onClick={() => onDelete(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(operations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport Actions from '../../redux/Phonebook/phonebook-actions';\nimport { selectors } from '../../redux/Phonebook';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter}>\n    Find contact by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  value: selectors.getContactFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(Actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}